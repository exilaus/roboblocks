'use strict';
(function() {
    var language = {
        //random :
        LANG_VARIABLES_SET_ITEM: 'oggetto',
        LANG_RESERVED_WORDS: 'Parola riservata: questo nome non è permesso.',
        //logic blocks:
        LANG_CATEGORY_LOGIC: 'Logica',
        LANG_LOGIC_OPERATION_AND: 'and',
        LANG_LOGIC_OPERATION_OR: 'or',
        LANG_LOGIC_COMPARE_TOOLTIP_EQ: 'Controlla se entrambi i valori siano uguali .',
        LANG_LOGIC_COMPARE_TOOLTIP_NEQ: 'Controlla se i valori siano differenti.',
        LANG_LOGIC_COMPARE_TOOLTIP_LT: 'Controlla se il primo valore sia più piccolo del scecondo.',
        LANG_LOGIC_COMPARE_TOOLTIP_LTE: 'Controlla se il primo valore sia più piccolo o uguale al secondo.',
        LANG_LOGIC_COMPARE_TOOLTIP_GT: 'Controlla se il primo valore sia più grande del secondo.',
        LANG_LOGIC_COMPARE_TOOLTIP_GTE: 'Controlla se il prim valore sia più grande o uguale al secondo.',
        LANG_LOGIC_OPERATION_TOOLTIP_AND: 'Controlla se entrambi i valori siano Veri.',
        LANG_LOGIC_OPERATION_TOOLTIP_OR: 'Controlla se almeno uno dei due valori sia Vero.',
        LANG_LOGIC_NEGATE_INPUT_NOT: 'not',
        LANG_LOGIC_NEGATE_TOOLTIP: 'Restituisce il valore opposto.',
        LANG_LOGIC_NEGATE_HELPURL: '',
        LANG_LOGIC_BOOLEAN_TRUE: 'Vero',
        LANG_LOGIC_BOOLEAN_FALSE: 'Falso',
        LANG_LOGIC_BOOLEAN_TOOLTIP: 'Restituisce il valore vero o falso della funzione selezionata.',
        //communication blocks:
        LANG_CATEGORY_COMMUNICATION: 'Comunicazione',
        LANG_BQ_BLUETOOTH_RECEIVE: 'Bluetooth ricevere dati',
        LANG_BQ_BLUETOOTH_RECEIVE_BLUETOOTH: 'Bluetooth',
        LANG_BQ_BLUETOOTH_RECEIVE_TOOLTIP: 'Restituisce i dati ricevuti dal modulo Bluetooth',
        LANG_BQ_BLUETOOTH_SEND: 'Bluetooth inviare dati',
        LANG_BQ_BLUETOOTH_SEND_SEND: 'Invia',
        LANG_BQ_BLUETOOTH_SEND_TOOLTIP: 'Invia dati usando il modulo bluetooth',
        LANG_BQ_BLUETOOTH_DEF: 'Bluetooth definition',
        LANG_BQ_BLUETOOTH_DEF_BAUD_RATE: 'Velocità di trasmissione',
        LANG_BQ_BLUETOOTH_DEF_PIN1: 'RX',
        LANG_BQ_BLUETOOTH_DEF_PIN2: 'TX',
        LANG_BQ_BLUETOOTH_DEF_NAME: 'Nome',
        LANG_BQ_BLUETOOTH_DEF_PINCODE: 'PinCode',
        LANG_BQ_BLUETOOTH_DEF_RECEIVE: 'Ricevere',
        LANG_BQ_BLUETOOTH_DEF_SEND: 'Inviare',
        LANG_BQ_BLUETOOTH_DEF_TOOLTIP: 'Definizione del modulo Bluetooth',
        LANG_ADVANCED_BT_SERIAL_AVAILABLE: 'Bluetooth Seriale disponibile',
        LANG_ADVANCED_BT_SERIAL_AVAILABLE_TOOLTIP: 'Controlla se il bluetooth è disponibile o meno.',
        LANG_ADVANCED_SERIAL_AVAILABLE: 'Serial Available',
        LANG_ADVANCED_SERIAL_AVAILABLE_TOOLTIP: 'Controlla se la porta seriale è disponibile o meno.',
        LANG_ADVANCED_SERIAL_PRINT: 'Visualizza porta Seriale',
        LANG_ADVANCED_SERIAL_PRINT_TOOLTIP: 'Visualizza dati come testo ASCII.',
        LANG_ADVANCED_SERIAL_PRINTLN: 'Visualizza in linea porta Seriale',
        LANG_ADVANCED_SERIAL_PRINTLN_TOOLTIP: 'Visualizza i dati come testo ASCII aggiungendo l'accapo (CR).',
        LANG_ADVANCED_SERIAL_READ: 'Lettura porta Seriale',
        LANG_ADVANCED_SERIAL_READ_TOOLTIP: 'Legge come testo ASCII i dati dalla porta seriale.',
        LANG_ADVANCED_SERIAL_SPECIAL: 'Caratteri Speciali',
        LANG_ADVANCED_SERIAL_SPECIAL_TAB: 'Tab',
        LANG_ADVANCED_SERIAL_SPECIAL_CARRIAGE_RETURN: 'Carriage Return',
        LANG_ADVANCED_SERIAL_SPECIAL_LINE_FEED: 'Line Feed',
        LANG_ADVANCED_SERIAL_SPECIAL_TOOLTIP: 'Writes special Chars.',
        //bq blocks :
        LANG_CATEGORY_BQ: 'octopus bloqs',
        LANG_BQ_BAT: 'BAT - Sensore ad Ultrasuoni',
        LANG_BQ_BAT_RED_PIN: 'ECHO PIN#',
        LANG_BQ_BAT_BLUE_PIN: 'TRIGGER PIN#',
        LANG_BQ_BAT_TOOLTIP: 'Restituisce la distanza misurata dal sensore a ultrasuoni.',
        LANG_BQ_BUTTON: 'Pulsante',
        LANG_BQ_BUTTON_PIN: 'PIN#',
        LANG_BQ_BUTTON_TOOLTIP: 'Pulsante',
        LANG_BQ_BUTTONS: 'Pad dei pulsanti',
        LANG_BQ_BUTTONS_PIN: 'PIN#',
        LANG_BQ_BUTTONS_BUTTON_A: 'Pulsante #A',
        LANG_BQ_BUTTONS_BUTTON_B: 'Pulsante #B',
        LANG_BQ_BUTTONS_BUTTON_C: 'Pulsante #C',
        LANG_BQ_BUTTONS_BUTTON_D: 'Pulsante #D',
        LANG_BQ_BUTTONS_BUTTON_E: 'Pulsante #E',
        LANG_BQ_BUTTONS_TOOLTIP: 'Pulsante Pad',
        LANG_BQ_INFRARED: 'Sensore infrarosso',
        LANG_BQ_INFRARED_PIN: 'PIN#',
        LANG_BQ_INFRARED_TOOLTIP: 'Restituisci valore digitale letto dal sensore infrarosso.',
        LANG_BQ_JOYSTICK: 'Joystick',
        LANG_BQ_JOYSTICK_PIN_X: 'Asse X PIN#',
        LANG_BQ_JOYSTICK_PIN_Y: 'Asse Y PIN#',
        LANG_BQ_JOYSTICK_PIN_BUTTON: 'Pulsante PIN#',
        LANG_BQ_JOYSTICK_POSITION: 'Joystick Posizione',
        LANG_BQ_JOYSTICK_TOOLTIP: 'Joystick',
        LANG_BQ_LED: 'LED',
        LANG_BQ_LED_PIN: 'PIN#',
        LANG_BQ_LED_STATE: '',
        LANG_BQ_LED_ON: 'Accesso',
        LANG_BQ_LED_OFF: 'Spento',
        LANG_BQ_LED_TOOLTIP: 'LED',
        LANG_BQ_PHOTORESISTOR: 'Sensore di Luce',
        LANG_BQ_PHOTORESISTOR_PIN: 'PIN#',
        LANG_BQ_PHOTORESISTOR_TOOLTIP: 'Restituisce il valore analogico misurato dal sensore di luce.',
        LANG_BQ_PIEZO_BUZZER: 'Cicalino',
        LANG_BQ_PIEZO_BUZZER_PIN: 'PIN#',
        LANG_BQ_PIEZO_BUZZER_TONE: 'TONO',
        LANG_BQ_PIEZO_BUZZER_DO: 'DO',
        LANG_BQ_PIEZO_BUZZER_RE: 'RE',
        LANG_BQ_PIEZO_BUZZER_MI: 'MI',
        LANG_BQ_PIEZO_BUZZER_FA: 'FA',
        LANG_BQ_PIEZO_BUZZER_SOL: 'SOL',
        LANG_BQ_PIEZO_BUZZER_LA: 'LA',
        LANG_BQ_PIEZO_BUZZER_SI: 'SI',
        LANG_BQ_PIEZO_BUZZER_DURATION: 'Durata',
        LANG_BQ_PIEZO_BUZZER_TOOLTIP: 'Cicalino Piezo',
        LANG_BQ_PIEZO_BUZZERAV: 'Cicalino Avanzato',
        LANG_BQ_PIEZO_BUZZERAV_PIN: 'PIN#',
        LANG_BQ_PIEZO_BUZZERAV_TONE: 'TONE',
        LANG_BQ_PIEZO_BUZZERAV_DURATION: 'Durata',
        LANG_BQ_PIEZO_BUZZERAV_TOOLTIP: 'Cicalino Piezo Avanzato',
        LANG_BQ_POTENTIOMETER: 'Potenziometro',
        LANG_BQ_POTENTIOMETER_PIN: 'PIN#',
        LANG_BQ_POTENTIOMETER_TOOLTIP: 'Restituisce il valore analogico del potenziometro.',
        //LCD blocks:
        LANG_CATEGORY_LCD: 'Blocco LCD',
        LANG_LCD_DEF: 'LCD',
        LANG_LCD_PINS: 'Connetti LCD con pin SCL a A5, ed il pin SDA a A4',
        LANG_LCD_DEF_TOOLTIP: 'Questo blocco definisce LCD',
        LANG_LCD_SETBACKLIGHT: 'LCD: imposta Retroilluminazione(',
        LANG_LCD_SETBACKLIGHT_CLOSE: ')',
        LANG_LCD_SETBACKLIGHT_TOOLTIP: 'Imposta la retroilluminazione del schermo LCD.',
        LANG_LCD_PRINT: 'LCD: Visualizza ',
        LANG_LCD_PRINT_POSITION: 'Imposta POsizione del testo?',
        LANG_LCD_PRINT_TOOLTIP: 'visualizza una stringa sul LCD a una determinata posizione o alla prossima disponibile.',
        LANG_LCD_CLEAR: 'Pulisci LCD',
        LANG_LCD_CLEAR_TOOLTIP: 'Pulisci LCD',
        //controls blocks :
        LANG_CATEGORY_CONTROLS: 'Controllo',
        LANG_CONTROLS_BASE_DELAY_WAIT: 'Aspetta (ms)',
        LANG_CONTROLS_BASE_DELAY_TOOLTIP: 'Aspetta un determinato tempo in millisecondi (ms)',
        LANG_CONTROLS_IF_TOOLTIP_1: 'se la condizione e' vera ,esegue il blocco.',
        LANG_CONTROLS_IF_TOOLTIP_2: 'se la condizione e' vera, esegue il primo blocco. altrimenti esegue il secondo blocco.',
        LANG_CONTROLS_IF_TOOLTIP_3: 'se la prima condizione e' vera esegue il primo blocco di codice,altrimenti se il secondo valore è Vero, viene eseguito il secondo blocco di codice.',
        LANG_CONTROLS_IF_TOOLTIP_4: 'Se la prima condizione e' vera, si esegue il primo blocco. Altrimenti, se il secondo valore è Vero, viene eseguito il secondo blocco.',
        LANG_CONTROLS_IF_MSG_IF: 'if',
        LANG_CONTROLS_IF_MSG_ELSEIF: 'else if',
        LANG_CONTROLS_IF_MSG_ELSE: 'else',
        LANG_CONTROLS_IF_MSG_THEN: 'do',
        LANG_CONTROLS_IF_IF_Field_IF: 'if',
        LANG_CONTROLS_IF_IF_TOOLTIP: 'Aggiunge, rimuove, o riordina la sezione per riconfigurare il blocco IF.',
        LANG_CONTROLS_IF_ELSEIF_Field_ELSEIF: 'else if',
        LANG_CONTROLS_IF_ELSEIF_TOOLTIP: 'aggiunge una condizione al blocco IF.',
        LANG_CONTROLS_IF_ELSE_Field_ELSE: 'else',
        LANG_CONTROLS_IF_ELSE_TOOLTIP: 'aggiunge una fine, prende tutte le altre condizioni del blocco IF.',
        LANG_CONTROLS_FOR_INPUT_WITH: 'count with',
        LANG_CONTROLS_FOR_INPUT_VAR: 'x',
        LANG_CONTROLS_FOR_INPUT_FROM: 'from',
        LANG_CONTROLS_FOR_INPUT_TO: 'to',
        LANG_CONTROLS_FOR_INPUT_DO: 'do',
        LANG_CONTROLS_FOR_TOOLTIP: 'Conta dal numero iniziale al numero finale.Ogni volta il valore si incrementa di uno, la variabile prende il valore di questo stato.',
        LANG_CONTROLS_WHILEUNTIL_OPERATOR_WHILE: 'while',
        LANG_CONTROLS_WHILEUNTIL_OPERATOR_UNTIL: 'until',
        LANG_CONTROLS_WHILEUNTIL_TOOLTIP_WHILE: 'Finchè la condizione è vera, esegue il blocco.',
        LANG_CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL: 'Finche la codinzione è falsa, esegue il blocco.',
        LANG_CONTROLS_REPEAT_TITLE_REPEAT: 'Ripetizione',
        LANG_CONTROLS_REPEAT_TITLE_TIMES: 'Volte',
        LANG_CONTROLS_REPEAT_INPUT_DO: 'do',
        LANG_CONTROLS_REPEAT_TOOLTIP: 'Ripeti il blocco per un certo numero di volte',
        LANG_CONTROLS_FLOW_STATEMENTS_HELPURL: '',
        LANG_CONTROLS_FLOW_STATEMENTS_INPUT_OFLOOP: 'of loop',
        LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK: 'break out',
        LANG_CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE: 'continua con la prossima interazione',
        LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK: 'Condizione d'uscita dal loop.',
        LANG_CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE: 'Saltare il resto del loop, e continuare con la prossima interazione.',
        LANG_CONTROLS_FLOW_STATEMENTS_WARNING: 'Attenzione: Questo blocco può essere usato solo insieme ad un LOOP.',
        LANG_CONTROLS_SWITCH: 'switch ',
        LANG_CONTROLS_SWITCH_TOOLTIP_1: 'Esegue il codice in un determinato caso.',
        LANG_CONTROLS_SWITCH_TOOLTIP_2: 'Usa il comando switch per selezionare uno o più blocchi di codice da eseguire.',
        LANG_CONTROLS_SWITCH_TOOLTIP_3: 'Usa il comando switch per selezionare uno o più blocchi di codice da eseguire.',
        LANG_CONTROLS_SWITCH_TOOLTIP_4: 'Usa il comando switch per selezionare uno o più blocchi di codice da eseguire.',
        LANG_CONTROLS_SWITCH_SWITCH_TOOLTIP: 'La espressione che deve valutare lo switch un sola volta',
        LANG_CONTROLS_SWITCH_CASE_TOOLTIP: 'case',
        LANG_CONTROLS_SWITCH_DEFAULT_TOOLTIP: 'la parola chiave di defaulo in caso da restiure in caso non sia stato riscontrata ugualianza',
        LANG_CONTROLS_SWITCH_IS: 'case: ',
        LANG_CONTROLS_SWITCH_CASE: 'case',
        LANG_CONTROLS_SWITCH_COLON: ': ',
        LANG_CONTROLS_SWITCH_DEFAULT: 'default',
        LANG_CONTROLS_SWITCH_DO: 'do',
        //math blocks :
        LANG_CATEGORY_MATH: 'Math',
        LANG_MATH_ADVANCED_MAP_MAP: 'Map ',
        LANG_MATH_ADVANCED_MAP_FROM: 'da [',
        LANG_MATH_ADVANCED_MAP_HYPHEN: '-',
        LANG_MATH_ADVANCED_MAP_BRACKET: ']',
        LANG_MATH_ADVANCED_MAP_TO: 'a [',
        LANG_MATH_ADVANCED_MAP_TOOLTIP: 'cambia l'input in determinato range di valori in un altro.',
        LANG_MATH_NUMBER_TOOLTIP: 'Numero',
        LANG_MATH_ARRAY_ARRAY3: '[3]',
        LANG_MATH_ARRAY_BRACKET3: '{',
        LANG_MATH_ARRAY_BRACKET4: '}',
        LANG_MATH_ARRAY_COMMA: ',',
        LANG_MATH_ARRAY_TOOLTIP: 'Array',
        LANG_ARRAY_GET_BRACKET1: '[',
        LANG_ARRAY_GET_BRACKET2: ']',
        LANG_ARRAY_GET_TOOLTIP: 'Restituisce il valore di uno specifico elemento di un array.',
        LANG_MATH_MODULO_TOOLTIP: 'Restituisce il valore di una divisione in due numeri.',
        LANG_MATH_BASE_MAP: 'Map ',
        LANG_MATH_BASE_MAP_VALUE_TO: 'Valore da [0-',
        LANG_MATH_BASE_MAP_BRACKET: ']',
        LANG_MATH_BASE_MAP_TOOLTIP: 'Cambia l'input da [0-1023] ad altro.',
        LANG_MATH_SINGLE_OP_ROOT: 'radice quadrata',
        LANG_MATH_SINGLE_OP_ABSOLUTE: 'assoluto',
        LANG_MATH_SINGLE_TOOLTIP_ROOT: 'restituisce la radice quadrata di un numero.',
        LANG_MATH_SINGLE_TOOLTIP_ABS: 'restituisce il valore assoluto di un numero.',
        LANG_MATH_SINGLE_TOOLTIP_NEG: 'Restituisce il valore negativo di un numero.',
        LANG_MATH_SINGLE_TOOLTIP_LN: 'Restituisce il logaritmo naturale di un numero.',
        LANG_MATH_SINGLE_TOOLTIP_LOG10: 'Restituisce il logaritmo a base 10 di un numero.',
        LANG_MATH_SINGLE_TOOLTIP_EXP: 'Restituisce la potenza di un numero',
        LANG_MATH_SINGLE_TOOLTIP_POW10: 'Restituisce la potenza di 10 di un numero.',
        //text blocks:
        LANG_CATEGORY_TEXT: 'Testo',
        LANG_TEXT_TEXT_HELPURL: '',
        LANG_TEXT_TEXT_TOOLTIP: 'A lettera, parola, o linea di testo.',
        LANG_TEXT_JOIN_HELPURL: '',
        LANG_TEXT_JOIN_Field_CREATEWITH: 'Crea un stest con',
        LANG_TEXT_JOIN_TOOLTIP: 'Crea un pezzo di testo unendo qualsiaso numero dei oggetti.',
        LANG_TEXT_CREATE_JOIN_Field_JOIN: 'Unisci',
        LANG_TEXT_CREATE_JOIN_TOOLTIP: 'aggiungi, rimuovi , o riordina la selezione per riconfigurare il blocco di testo.',
        LANG_TEXT_CREATE_JOIN_ITEM_Field_ITEM: 'Oggetto',
        LANG_TEXT_CREATE_JOIN_ITEM_TOOLTIP: 'Aggiungi un oggetto al testo.',
        LANG_TEXT_CREATE_JOIN_TITLE_JOIN: 'Join',
        LANG_TEXT_CREATE_JOIN_ITEM_TITLE_ITEM: 'elemento',
        LANG_TEXT_APPEND_HELPURL: '',
        LANG_TEXT_APPEND_TO: 'a',
        LANG_TEXT_APPEND_APPENDTEXT: 'accoda testo',
        LANG_TEXT_APPEND_VARIABLE: 'oggetto',
        LANG_TEXT_APPEND_TOOLTIP: 'Accoda del testo alla variabile %1.',
        LANG_TEXT_LENGTH_HELPURL: '',
        LANG_TEXT_LENGTH_INPUT_LENGTH: 'lunghezza',
        LANG_TEXT_LENGTH_TOOLTIP: 'Restituisce il numero di lettere(inclusi gli spazi)presenti nel testo.',
       LANG_TEXT_EQUALSIGNORECASE_IS: '',
        LANG_TEXT_EQUALSIGNORECASE_EQUAL: ' =',
        LANG_TEXT_EQUALSIGNORECASE_QUESTION: '?',
        LANG_TEXT_EQUALSIGNORECASE_TOOLTIP: 'Controlla se in entrambi gli input le stringhe siano uguali, a seconda della regola.',
        LANG_TEXT_SUBSTRING: 'Crop ',
        LANG_TEXT_SUBSTRING_FROM: 'da',
        LANG_TEXT_SUBSTRING_TO: 'a',
        LANG_TEXT_SUBSTRING_TOOLTIP: 'ottieni una sotto stringa del valore d'ingresso con i caratterei tra i due numeri inseriti.',
        //advanced blocks :
        LANG_CATEGORY_ADVANCED: 'Pin functions',
        LANG_ADVANCED_CONVERSION_CONVERT: 'Conversione',
        LANG_ADVANCED_CONVERSION_DECIMAL: 'Decimale',
        LANG_ADVANCED_CONVERSION_HEXADECIMAL: 'esadecimale',
        LANG_ADVANCED_CONVERSION_OCTAL: 'Octal',
        LANG_ADVANCED_CONVERSION_BINARY: 'Binario',
        LANG_ADVANCED_CONVERSION_VALUE: 'valore',
        LANG_ADVANCED_CONVERSION_TOOLTIP: 'Converti un numero dalla base di un altro.',
        LANG_ADVANCED_INOUT_ANALOG_READ: 'AnalogRead PIN#',
        LANG_ADVANCED_INOUT_ANALOG_READ_TOOLTIP: 'Legge il valore di uno specifico pin analogico',
        LANG_ADVANCED_INOUT_ANALOG_WRITE: 'AnalogWrite PIN#',
        LANG_ADVANCED_INOUT_ANALOG_WRITE_VALUE: 'valore',
        LANG_ADVANCED_INOUT_ANALOG_WRITE_TOOLTIP: 'scrivi un valore da 0 a 255 da inserire in uscita a un pin analogico',
        LANG_ADVANCED_BUILTIN_LED: 'LED integrato',
        LANG_ADVANCED_BUILTIN_LED_STATE: 'stato',
        LANG_ADVANCED_BUILTIN_LED_ON: 'Acceso',
        LANG_ADVANCED_BUILTIN_LED_OFF: 'Spento',
        LANG_ADVANCED_BUILTIN_LED_TOOLTIP: 'il Led integrato e' collegato al PIN 13',
        LANG_ADVANCED_INOUT_DIGITAL_READ: 'DigitalRead PIN#',
        LANG_ADVANCED_INOUT_DIGITAL_READ_TOOLTIP: 'Legge il valore da uno specifico Pin Digitale',
        LANG_ADVANCED_INOUT_DIGITAL_WRITE: 'DigitalWrite',
        LANG_ADVANCED_INOUT_DIGITAL_WRITE_PIN: 'PIN#',
        LANG_ADVANCED_INOUT_DIGITAL_WRITE_STATE: 'stato',
        LANG_ADVANCED_INOUT_DIGITAL_WRITE_HIGH: 'HIGH',
        LANG_ADVANCED_INOUT_DIGITAL_WRITE_LOW: 'LOW',
        LANG_ADVANCED_INOUT_DIGITAL_WRITE_TOOLTIP: 'Scrive lo stato specifico a un Pin Digitale',
        LANG_ADVANCED_HIGHLOW_HIGH: 'HIGH',
        LANG_ADVANCED_HIGHLOW_LOW: 'LOW',
        LANG_ADVANCED_HIGHLOW_TOOLTIP: 'HIGH O LOW',
        LANG_ADVANCED_MATH_RANDOM: 'Numero casuale tra',
        LANG_ADVANCED_MATH_RANDOM_AND: ' e ',
        LANG_ADVANCED_MATH_RANDOM_TOOLTIP: 'Restituisce un valore casuale tra i due limiti.',
        //procedures blocks
        LANG_CATEGORY_PROCEDURES: 'Functioni',
        LANG_PROCEDURES_CALL_WITHOUT_DEFINITION: 'La funzione è ricamata senza corrisponenti definizioni',
        LANG_PROCEDURES_DEFNORETURN_HELPURL: '',
        LANG_PROCEDURES_DEFNORETURN_PROCEDURE: 'Funzione_senza_valore_d_uscita',
        LANG_PROCEDURES_DEFNORETURN_DO: 'fai',
        LANG_PROCEDURES_DEFNORETURN_TOOLTIP: 'La funzione non restiusce nessun valore in uscita da essa.',
        LANG_PROCEDURES_DEFRETURN_HELPURL: '',
        LANG_PROCEDURES_DEFRETURN_PROCEDURE: 'Funzione_con_valore_uscita',
        LANG_PROCEDURES_DEFRETURN_DO: 'fai',
        LANG_PROCEDURES_DEFRETURN_RETURN: 'uscita',
        LANG_PROCEDURES_DEFRETURN_TOOLTIP: 'La funzione restiusce un valore in uscita.',
        LANG_PROCEDURES_DEF_DUPLICATE_WARNING: 'Attenzione: questa funziona ha un parametro duplicato.',
        LANG_PROCEDURES_CALLNORETURN_HELPURL: '',
        LANG_PROCEDURES_CALLNORETURN_CALL: 'fai',
        LANG_PROCEDURES_CALLNORETURN_PROCEDURE: 'Funzione_senza_valore_d_uscita',
        LANG_PROCEDURES_CALLNORETURN_TOOLTIP: 'richiama una funzione senza valore in uscita.',
        LANG_PROCEDURES_CALLRETURN_HELPURL: '',
        LANG_PROCEDURES_CALLRETURN_CALL: 'fai',
        LANG_PROCEDURES_CALLRETURN_PROCEDURE: 'Funzione_con_valore_uscita',
        LANG_PROCEDURES_CALLRETURN_TOOLTIP: 'Richiama una funzione con valore in uscita.',
        LANG_PROCEDURES_MUTATORCONTAINER_Field: 'parametri',
        LANG_PROCEDURES_MUTATORARG_Field: 'variabili:',
        LANG_PROCEDURES_HIGHLIGHT_DEF: 'Funzione sottolineata',
        LANG_PROCEDURES_IFRETURN_TOOLTIP: 'se la condizione e vera , restituisce il valore.',
        LANG_PROCEDURES_IFRETURN_WARNING: 'Attenzione: Questo blocco può essere usato solo con un funzione che restiusce un valore.',
        //variables blocks :
        LANG_CATEGORY_VARIABLES: 'Variabli',
        LANG_VARIABLES_CALL_WITHOUT_DEFINITION: 'Qusta variable non e' dichiarata.',
        LANG_VARIABLES_GLOBAL: 'Variable ',
        LANG_VARIABLES_GLOBAL_TYPE: 'tipo di ',
        LANG_VARIABLES_GLOBAL_EQUALS: 'uguale',
        LANG_VARIABLES_GLOBAL_TOOLTIP: 'Dichiara e definisci una Varibile Globale di tipo intero o stringa.',
        LANG_VARIABLES_LOCAL: 'Variabile locale ',
        LANG_VARIABLES_LOCAL_TYPE: 'tipo di ',
        LANG_VARIABLES_LOCAL_EQUALS: 'uguale',
        LANG_VARIABLES_LOCAL_TOOLTIP: 'Dichiarazione e definisci una varibile LOCALE di tipo intero o stringa.',
        LANG_VARIABLES_DEFINE: 'Definizione variable ',
        LANG_VARIABLES_DEFINE_AS: 'come',
        LANG_VARIABLES_DEFINE_TOOLTIP: 'Definisi il valore della variable.',
        LANG_VARIABLES_SET: 'Definisci variable ',
        LANG_VARIABLES_SET_AS: 'come',
        LANG_VARIABLES_SET_TOOLTIP: 'Definisci valore della variabile.',
        LANG_VARIABLES_GET: 'Variable ',
        LANG_VARIABLES_GET_TOOLTIP: 'Restituisce il valore della stampante.',
        LANG_VARIABLES_PIN_ANALOG: 'PIN analogico',
        LANG_VARIABLES_PIN_DIGITAL: 'PIN digitale',
        LANG_VARIABLES_PIN_TOOLTIP: 'Seleziona il PIN.',
        //zum blocks :
        LANG_CATEGORY_ZUM: 'zum bloqs',
        LANG_ZUM_BUTTON: 'Pulsante',
        LANG_ZUM_BUTTON_PIN: 'PIN#',
        LANG_ZUM_BUTTON_TOOLTIP: 'zum Pulsante',
        LANG_ZUM_FOLLOWER: 'Sensore infrarosso',
        LANG_ZUM_FOLLOWER_PIN_LEFT: 'PIN SINISTRO#',
        LANG_ZUM_FOLLOWER_PIN_RIGHT: 'PIN DESTRO#',
        LANG_ZUM_FOLLOWER_LEFT: 'Sinistra',
        LANG_ZUM_FOLLOWER_RIGHT: 'Destra',
        LANG_ZUM_FOLLOWER_TOOLTIP: 'Restituisce il valore digitale letto dal sensore infrarosso',
        LANG_ZUM_INFRARED: 'Sensora Infrarosso',
        LANG_ZUM_INFRARED_PIN: 'PIN#',
        LANG_ZUM_INFRARED_TOOLTIP: 'Restituisce il valore digiale letto dal Sensore Infrarosso',
        LANG_ZUM_LED: 'LED',
        LANG_ZUM_LED_PIN: 'PIN#',
        LANG_ZUM_LED_ON: 'ACCESO',
        LANG_ZUM_LED_OFF: 'SPENTO',
        LANG_ZUM_LED_TOOLTIP: 'zum LED',
        LANG_ZUM_PHOTORESISTOR: 'Sensore di Luce',
        LANG_ZUM_PHOTORESISTOR_PIN: 'PIN#',
        LANG_ZUM_PHOTORESISTOR_TOOLTIP: 'Restituisce il valore analogico misurato dal sensore di luce.',
        LANG_ZUM_PIEZO_BUZZER: 'Cicalino',
        LANG_ZUM_PIEZO_BUZZER_PIN: 'PIN#',
        LANG_ZUM_PIEZO_BUZZER_TONE: 'TONO',
        LANG_ZUM_PIEZO_BUZZER_DO: 'DO',
        LANG_ZUM_PIEZO_BUZZER_RE: 'RE',
        LANG_ZUM_PIEZO_BUZZER_MI: 'MI',
        LANG_ZUM_PIEZO_BUZZER_FA: 'FA',
        LANG_ZUM_PIEZO_BUZZER_SOL: 'SOL',
        LANG_ZUM_PIEZO_BUZZER_LA: 'LA',
        LANG_ZUM_PIEZO_BUZZER_SI: 'SI',
        LANG_ZUM_PIEZO_BUZZER_DURATION: 'Durata',
        LANG_ZUM_PIEZO_BUZZER_TOOLTIP: 'Cicalino Piezo',
        LANG_ZUM_PIEZO_BUZZERAV: 'Cicalino Avanzato',
        LANG_ZUM_PIEZO_BUZZERAV_PIN: 'PIN#',
        LANG_ZUM_PIEZO_BUZZERAV_TONE: 'TONO',
        LANG_ZUM_PIEZO_BUZZERAV_DURATION: 'Durata',
        LANG_ZUM_PIEZO_BUZZERAV_TOOLTIP: 'Cicalino Piezo Avanzato',
        LANG_ZUM_POTENTIOMETER: 'Potenziometro',
        LANG_ZUM_POTENTIOMETER_PIN: 'PIN#',
        LANG_ZUM_POTENTIOMETER_TOOLTIP: 'Restituisce il valore analogico del potenziometro.',
        //servo blocks :
        LANG_CATEGORY_SERVO: 'Servo',
        LANG_SERVO_CONT: 'Servo',
        LANG_SERVO_CONT_PIN: 'PIN#',
        LANG_SERVO_CONT_ROT: 'ROTAZiONE',
        LANG_SERVO_CONT_TURN_CLOCKWISE: 'GIRA IN SENSO ORARIO',
        LANG_SERVO_CONT_TURN_COUNTERCLOCKWISE: 'GIRA IN SENSo ANTI-ORARIO',
        LANG_SERVO_CONT_STOPPED: 'FERMA',
        LANG_SERVO_CONT_DELAY: 'Pausa',
        LANG_SERVO_CONT_TOOLTIP: 'Continuous rotation servo.',
        LANG_SERVO_MOVE: 'Servo',
        LANG_SERVO_MOVE_PIN: 'PIN#',
        LANG_SERVO_MOVE_DEGREES: 'Gradi (0~180)',
        LANG_SERVO_MOVE_DELAY: 'Pausa',
        LANG_SERVO_MOVE_TOOLTIP: 'Muove dai 0~180 gradi',
    };
    // Node
    if (typeof module !== 'undefined' && module.exports) {
        module.exports = language;
    }
    // Browser
    // if (typeof window !== 'undefined' && this.RoboBlocks && this.RoboBlocks.locales.add) {
    //     this.RoboBlocks.locales.add('en', language);
    if (typeof window !== 'undefined' && RoboBlocks && RoboBlocks.locales.add) {
        RoboBlocks.locales.add('it-IT', language);
    }
}());